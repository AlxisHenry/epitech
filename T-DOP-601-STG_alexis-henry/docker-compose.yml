version: "3"
services:
  db:
    image: postgres:10
    environment:
      REDIS_HOST: redis
      DB_HOST: db
      DB_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - back-tier
      - result-tier
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - poll-tier
      - back-tier
    restart: unless-stopped

  worker:
    build: ./worker
    environment:
      REDIS_HOST: redis
      DB_HOST: db
      DB_USER: postgres
      DB_PASSWORD: password
    restart: unless-stopped
    networks:
      - back-tier
    depends_on:
      - db
      - redis

  poll:
    build: ./poll
    ports:
      - "5000:80"
    networks:
      - poll-tier
    environment:
      REDIS_HOST: redis
      DB_HOST: db
      DB_USER: postgres
      DB_PASSWORD: password
    restart: unless-stopped
    depends_on:
      - redis

  result:
    build: ./result
    ports:
      - "5001:80"
    networks:
      - result-tier
    environment:
      DB_HOST: db
      DB_USER: postgres
      DB_PASSWORD: password
      PORT: 80
    restart: unless-stopped
    depends_on:
      - db

networks:
  poll-tier: {}
  result-tier: {}
  back-tier: {}

volumes:
  db-data: {}
